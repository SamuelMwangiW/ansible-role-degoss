---
- name: create workdir
  command: "mktemp -d {{ degoss_base_workdir }}/degoss.XXXXXXXXXX"
  register: workdir
  changed_when: false

- name: establish facts
  set_fact:
    degoss_tmp_root: "{{ workdir.stdout.strip() }}"
    degoss_test_dir: "{{ workdir.stdout.strip() }}/tests"
    goss_download: "{{ False if goss_copy_host_binaries else True }}"

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
  changed_when: false
  with_items:
    - '{{ degoss_test_dir }}'
    - '{{ degoss_tmp_root }}/bin'

- name: Copy goss binaries to remote host
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: 0766
  when: goss_copy_host_binaries
  changed_when: false
  with_items:
    - { src: '{{ goss_binary_dir }}/goss', dest: '{{ degoss_tmp_root }}/bin/goss' }
    - { src: '{{ goss_binary_dir }}/dgoss', dest: '{{ degoss_tmp_root }}/bin/dgoss' }

# deploy test files including the main and additional test files
- name: deploy test files
  copy:
    src: |-
      {%- if item.startswith('/') -%}
        {{ item }}
      {%- else -%}
        {{ playbook_dir | default(".") }}/{{ item }}
      {%- endif -%}
    dest: "{{ degoss_test_dir }}"
    mode: 0644
    directory_mode: 0755
    setype: user_tmp_t
  loop: "{{ [goss_file] + goss_addtl_files + goss_addtl_dirs }}"
  changed_when: false

# run the tests
- name: run tests
  degoss:
    clean: "{{ degoss_clean | bool }}"
    clean_on_failure: "{{ degoss_clean_on_failure | bool }}"
    debug: "{{ degoss_debug | bool }}"
    facts: "{{ ansible_facts | to_json }}"
    test_dir: "{{ degoss_test_dir }}"
    test_file: "{{ goss_file }}"
    tmp_root: "{{ degoss_tmp_root }}"
    variables: "{{ goss_variables | default({}) | to_json }}"
    download: "{{ goss_download }}"
